name: DEBUG

on:
  workflow_dispatch:
    inputs:
      environment:
        type: environment

  
jobs:

  get-environment-id:
    runs-on: ubuntu-latest
    steps:
      - name: Get environment ID
        uses: actions/http-client@v1
        with:
          url: https://api.github.com/repos/${{ github.repository }}/environments
          method: GET
          headers: |
            Authorization: token ${{ secrets.GITHUB_TOKEN }}
          outputs: env_id: $.[] | select(.name == '${{ env.ENVIRONMENT_NAME }}') | .id
      - name: Print environment ID
        run: echo ${{ steps.get-environment-id.outputs.env_id }}
        
  eid:
      runs-on: ubuntu-latest
      steps:
        - name: Get Environment Id
          id: environment-id
          shell: pwsh
          run: |
            $environmentId = ""
            $url = "https://api.github.com/repos/${{ github.repository }}/environments"
            $response = Invoke-RestMethod -Uri $url -Method Get  -Headers @{
              Authorization = "Bearer ${{ secrets.GITHUB_TOKEN }}"
            }
            if ($response){
              # Find Environment Id...
              foreach ($environment in $response.environments) {
                if ($environment.name -eq "qa"){
                  $environmentId = $environment.id
                  break
                }
              }
            }

            # Set output
            echo "::set-output name=value::$(echo $environmentId)"

        - name: Show me Environment Id
          run: echo "Environment Id for qa is ${{ steps.environment-id.outputs.value }}"


          
  debug:
    runs-on: ubuntu-latest
    env:
      GITHUB_CONTEXT: ${{ toJson(github) }}
    steps:
      - name: Dump GitHub context
        run: echo "$GITHUB_CONTEXT"
        
      - name: Dump job context
        env:
          JOB_CONTEXT: ${{ toJson(job) }}
        run: echo "$JOB_CONTEXT"
        
      - name: Dump steps context
        env:
          STEPS_CONTEXT: ${{ toJson(steps) }}
        run: echo "$STEPS_CONTEXT"
        
      - name: Dump runner context
        env:
          RUNNER_CONTEXT: ${{ toJson(runner) }}
        run: echo "$RUNNER_CONTEXT"
        
      - name: Dump strategy context
        env:
          STRATEGY_CONTEXT: ${{ toJson(strategy) }}
        run: echo "$STRATEGY_CONTEXT"
        
      - name: Dump matrix context
        env:
          MATRIX_CONTEXT: ${{ toJson(matrix) }}
        run: echo "$MATRIX_CONTEXT"
